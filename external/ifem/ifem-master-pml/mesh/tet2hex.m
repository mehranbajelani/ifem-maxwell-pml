function [node,elemhex] = tet2hex(node,elem,HB)
%% TET2HEX merge tetrahedron to hexahedron
% (node,elem) is a mesh generated by cubemesh.

%% initilization
N = size(node,1); 
NT = size(elem,1);
Nhex = floor(NT/6);
elemhex = zeros(NT,8);
elemhex(:,1:4) = elem;

%% use generation to find non-refined elements
generation = zeros(N,1);
generation(HB(:,1)) = HB(:,4);
tetgen = max(generation(elem),[],2);
hexgen = max(reshape(tetgen,6,Nhex));
hexidx = find(hexgen' == 0);  % not refined
nhex = length(hexidx);
tetidx = repmat(1:6,nhex,1);
tetidx = repmat(6*(hexidx-1),1,6) + tetidx;

%% merge 6 tet to one hex
h2v = sparse(elem(tetidx(:),:),repmat(repmat(hexidx,1,4),6,1), 1, N, Nhex);
[i,t] = find(h2v);
elemhex(6*(hexidx-1)+1,:) = sort(reshape(i,nhex,8),2);
idx = tetidx(:,2:6);
elemhex(idx(:),:) = []; 